# Test workflow - Runs automated tests on pull requests
# This workflow ensures code quality by running tests before merging to main
name: Test

# Trigger: Run on pull requests targeting the main or develop branches
on:
  pull_request:
    branches: [main, develop]

jobs:
  test-docker:
    # Use the latest Ubuntu runner for consistent test environment
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository code including PR changes
      - uses: actions/checkout@v4

      # Step 2: Set up Java 21 with Eclipse Temurin distribution
      # Required for building the Spring Boot application
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "eclipse-temurin"

      # Step 3: Cache Maven dependencies for faster builds
      # Reduces build time by reusing downloaded dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Step 4: Build JAR with Maven (skip tests for now, will run in Docker)
      # Creates the JAR file needed for Docker container testing
      - name: Build JAR with Maven
        run: ./mvnw clean package -DskipTests

      # Step 5: Set up Docker Buildx for Docker operations
      # Required for building and running Docker containers
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 6: Execute the test suite using docker-compose
      # Runs tests in isolated container environment matching production
      - name: Run tests with docker-compose
        run: docker compose -f docker-compose-test.yml up --quiet-pull --abort-on-container-exit --exit-code-from mykitchen-hub-test
        # --quiet-pull: Reduce output noise during image pulls
        # --abort-on-container-exit: Stop all containers when any container exits
        # --exit-code-from: Use exit code from specified container (mykitchen-hub-test)

      # Step 7: Clean up Docker resources
      # Always runs regardless of test results to prevent resource leaks
      - name: Clean up
        if: always() # Run even if previous steps fail
        run: docker compose -f docker-compose-test.yml down -v
        # down: Stop and remove containers
        # -v: Remove associated volumes
