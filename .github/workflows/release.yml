name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "eclipse-temurin"

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run tests
        run: ./mvnw test
        env:
          DB_URL: jdbc:h2:mem:testdb
          DB_USERNAME: sa
          DB_PASSWORD:
          JWT_SECRET: test-secret-key-for-testing-purposes-only
          JWT_EXPIRATION: 86400000
          JWT_REFRESH_EXPIRATION: 604800000
          EMAIL: test@example.com
          EMAIL_PASSWORD: testpassword
          CLOUDINARY_CLOUD_NAME: test
          CLOUDINARY_API_KEY: test
          CLOUDINARY_API_SECRET: test

      - name: Build application
        run: ./mvnw clean package -DskipTests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/mykitchen_hub
          tags: |
            type=ref,event=tag      # Tag with version number (e.g., v1.0.0)
            type=raw,value=latest   # Also tag as 'latest' for easy access

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          body: |
            ## Changes

            Docker image: `${{ secrets.DOCKER_USERNAME }}/mykitchen_hub:${{ github.ref_name }}`

            ## Installation

            ```bash
            docker pull ${{ secrets.DOCKER_USERNAME }}/mykitchen_hub:${{ github.ref_name }}
            ```

            ## Usage

            ```bash
            docker run -p 8080:8080 \
              -e DB_URL=jdbc:mysql://host.docker.internal:3306/mykitchen_hub \
              -e DB_USERNAME=your_username \
              -e DB_PASSWORD=your_password \
              -e JWT_SECRET=your_jwt_secret \
              -e EMAIL=your_email \
              -e EMAIL_PASSWORD=your_app_password \
              -e CLOUDINARY_CLOUD_NAME=your_cloud_name \
              -e CLOUDINARY_API_KEY=your_api_key \
              -e CLOUDINARY_API_SECRET=your_api_secret \
              ${{ secrets.DOCKER_USERNAME }}/mykitchen_hub:${{ github.ref_name }}
            ```

      - name: Clean up
        if: always()
        run: docker system prune -f
